[build-system]
requires = ["setuptools", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"


[project]
name = "ibex-bluesky-core"  # REQUIRED, is the only field that cannot be marked as dynamic.
dynamic = ["version"]
description = "Core bluesky plan stubs & devices for use at ISIS"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}

authors = [
  {name = "ISIS Experiment Controls", email = "ISISExperimentControls@stfc.ac.uk" }
]
maintainers = [
  {name = "ISIS Experiment Controls", email = "ISISExperimentControls@stfc.ac.uk" }
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
  "bluesky",
  "ophyd-async[ca]",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.6",
  "pyright",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
]

[project.urls]
"Homepage" = "https://github.com/isiscomputinggroup/ibex_bluesky_core"
"Bug Reports" = "https://github.com/isiscomputinggroup/ibex_bluesky_core/issues"
"Source" = "https://github.com/isiscomputinggroup/ibex_bluesky_core"

[tool.pytest.ini_options]
testpaths = "tests"
asyncio_mode = "auto"
addopts = "--cov --cov-report=html -vv"

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
  "src/ibex_bluesky_core/demo_plan.py"  # Demo code only
]

[tool.coverage.report]
fail_under = 100

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pyright]
include = ["src", "tests"]
reportConstantRedefinition = true
reportDeprecated = true
reportInconsistentConstructor = true
reportMissingParameterType = true
reportMissingTypeArgument = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportUnnecessaryIsInstance = true
reportUntypedBaseClass = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true

[tool.setuptools_scm]
